- name: Initialize Kubernetes Master
  command: kubeadm init --pod-network-cidr=192.168.0.0/16 --skip-phases=addon/kube-proxy
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item}}"

- name: kubeadm token create
  command: kubeadm token create --print-join-command
  register: kubeadm_init_output_temp
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Set global variable kubeadm_init_output
  set_fact:
    kubeadm_init_output: "{{ kubeadm_init_output_temp.results | map(attribute='stdout') | first }}"

- name: Debug information for master
  debug:
    msg: "This is the master"

- name: Execute the command on the master host
  shell:
    cmd: "cd /etc/kubernetes/ && mkdir -p ~/.kube && cp admin.conf ~/.kube/config"
  become_user: root
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Download Helm installation script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /tmp/get-helm-3
    mode: "u+x"
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Install Helm
  command: /tmp/get-helm-3
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Add Cilium Helm repository
  ansible.builtin.command:
    cmd: helm repo add cilium https://helm.cilium.io/
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Install Cilium
  ansible.builtin.shell:
    cmd: helm install cilium cilium/cilium --version 1.14.1 --namespace kube-system --set kubeProxyReplacement=true --set k8sServiceHost={{ master_ip_addresses }} --set k8sServicePort=6443 --set ipv4NativeRoutingCIDR=10.244.0.0/16 --set tunnel=disabled --set autoDirectNodeRoutes=true --set ipam.operator.clusterPoolIPv4PodCIDRList=10.244.0.0/16 --set ipam.operator.clusterPoolIPv4MaskSize=19 --set hubble.ui.enabled=true --set hubble.relay.enabled=true
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Copy metrics-server.yml to remote machine
  ansible.builtin.copy:
    src: "template/metrics-server.yml"
    dest: "/root/metrics-server.yml"
  delegate_to: "{{ item }}"
  with_items: "{{ master_ip_addresses }}"

- name: Apply metrics-server.yaml using kubectl
  ansible.builtin.shell:
    cmd: kubectl apply -f /root/metrics-server.yml
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"
  
- name: Copy the template file with template
  ansible.builtin.template:
    src: template/alias.j2
    dest: /root/.bashrc
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"

- name: Source ~/.bashrc on remote host
  ansible.builtin.shell:
    cmd: source /root/.bashrc
  with_items: "{{ master_ip_addresses }}"
  delegate_to: "{{ item }}"
